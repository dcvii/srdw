#!/bin/ksh
############################################################
#       File:       export.sh
#       Purpose:    Dump Essbase Objects & Data
#
#       Version:
#       Parameters:
#       Created:
#       Author:   mbowen@mdcbowen.org
#       Parameters:
#       User to run with: essbase
#
#	modified 20030325.0930 by mbowen
#
############################################################
# Regional DW Export Control
#
# 20030325.1335 - mbowen@mdcbowen.org
# for Nissan USA
#
############################################################

# good for all boxes

## init
# whereami
disk=`head -1 ~essbase/disk.dat`
envid=`head -1 ~essbase/env.dat`


# some handy constants
PGMNAME=`basename $0`
PID=$$

appid=$1


errdir="/${disk}03/essbase/rdwmr/errlogs/"
logdir="/${disk}03/essbase/rdwmr/logs/"
expdir="/${disk}03/essbase/rdwmr/export/"
appdir="/${disk}01/vendors/essbase/app/"
scrdir="/${disk}03/essbase/rdwmr/scripts/"
inpdir="/${disk}03/essbase/rdwmr/input/"
bindir="/${disk}01/vendors/essbase/bin/"

recipients='bowenm@nmc.nna, becerrr@nmc.nna, mcdougm@nmc.nna'

logfile="${logdir}export_activity.log"

## subs
log () {
	TIMESTAMP=`date '+%m/%d/%Y %H:%M:%S'`
	echo "${TIMESTAMP} ${PGMNAME} ${PID} $*" >>$logfile
}



makemsh () {

	app=$1
	mshfile="${app}_export.msh"
	echo generating $mshfile
	echo "/* autogenerated by export.sh `date` */" > $mshfile
	echo "login system manager on localhost;" >> $mshfile

	echo "alter application $xapp disable connects;" >> $mshfile
	echo "alter system logout session on application ${xapp};" >> $mshfile

	# export in four parts
	echo "export database ${xapp}.Main" >> $mshfile
	echo "input data to data_file" >> $mshfile

	a="'${expdir}${appid}_ex1.txt',"
	echo "$a" >> $mshfile

	a="'${expdir}${appid}_ex2.txt',"
	echo "$a" >> $mshfile

	a="'${expdir}${appid}_ex3.txt',"
	echo "$a" >> $mshfile

	a="'${expdir}${appid}_ex4.txt';"
	echo "$a" >> $mshfile

	echo "alter application ${xapp} enable connects;" >> $mshfile
	echo "logout; exit;" >> $mshfile

}



## main
clear

## app parse
case $appid in
	'mex6') xapp="MEX6"; db="Main"; valid=1;;
	'rfin') xapp="RFIN"; db="Main"; valid=1;;
	'patb') xapp="PATB"; db="Main"; valid=1;;
	'locl') xapp="LOCL"; db="Main"; valid=1;;
	'rbs') xapp="RBS"; db="Main"; valid=1;;
	'rfem') xapp="RFEM"; db="Main"; valid=1;;
	'rbsc') xapp="RBSC"; db="Main"; valid=1;;
	'rx11') xapp="RX11"; db="Main"; valid=1;;
	'rx10') xapp="RX10"; db="Main"; valid=1;;
	'rplu') xapp="RPLU"; db="Main"; valid=1;;
	'rplc') xapp="RPLC"; db="Main"; valid=1;;
	'rpla') xapp="RPLA"; db="Main"; valid=1;;
	'rplb') xapp="RPLB"; db="Main"; valid=1;;
	*)	echo "invalid selection: $appid"; valid=0;;
esac



## All Apps
if [[ $valid -eq 1 ]]; then
	echo ${appid} export initiated
	log ${appid} export initiated
	cd $scrdir

	# get build number and name destination files
	bnum=`head -1 ${expdir}${appid}.ver`
	typeset -R3 x=$bnum   # right 3 digits = build number
	dfspec="${appid}_build${x}_data.tar"
	ofspec="${appid}_build${x}_objects.tar"


	## data export using internally generated msh

	makemsh ${appid}
	date > ${logdir}${appid}_export.log
	echo $envid >> ${logdir}${appid}_export.log
	echo exporting data..
	${bindir}essmsh ${scrdir}${appid}_export.msh >> ${logdir}${appid}_export.log
	echo done.


	## tar & gzip data export
	echo exporting objects...
	cd ${expdir}
	rm -f ${appid}*.tar
	tar -cf $dfspec ${appid}_ex*.txt

	# gzip -f $dfspec
	pkzipc -add -move -fast -silent ${dfspec}.zip $dfspec
	rm -f ${appid}*.txt

	## object export
	cd ${appdir}${xapp}/Main
	tar -cf $ofspec *.rul *.otl *.csc *.rep *.wiz ${expdir}${appid}.ver
	# gzip -f $ofspec
	pkzipc -add -move -fast -silent ${ofspec}.zip $ofspec
	ofspec="${ofspec}.zip"
	mv $ofspec $expdir.
	echo done.
	echo ' '


	## notify and archive log
	cd ${logdir}
	cat ${appid}_export.log | mailx -s "${envid} ${xapp} Export" $recipients
	perl ${scrdir}arc.pl ${appid}_export.log

	ls -lt ${expdir}${appid}*

fi


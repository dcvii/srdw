#!/bin/ksh
############################################################
#       File:       migrate.sh
#       Purpose:    Pull App from Environment to Environment
#
#       Version:
#       Parameters:
#       Created:
#       Author:   mbowen
#       Parameters:
#       User to run with: essbase
#
#	modified 20030325.1020 by mbowen
#
############################################################
# This program pulls the latest objects from the DEV server
# and restores them to the application subdirectory. Don't
# rely on this to 'touch' the outline. Do that through AppMgr
# the touch code here is not reliable.
#
#
#
#
## this version to run on any box

## init

# some handy constants
PGMNAME=`basename $0`
PID=$$

appid=$1
# whereami
disk=`head -1 ~essbase/disk.dat`
envid=`head -1 ~essbase/env.dat`

errdir="/${disk}03/essbase/rdwmr/errlogs/"
logdir="/${disk}03/essbase/rdwmr/logs/"
expdir="/${disk}03/essbase/rdwmr/export/"
appdir="/${disk}01/vendors/essbase/app/"
scrdir="/${disk}03/essbase/rdwmr/scripts/"
inpdir="/${disk}03/essbase/rdwmr/input/"
bindir="/${disk}01/vendors/essbase/bin/"

recipients='bowenm@nmc.nna, schwabj@nmc.nna, mcdougm@nmc.nna'

logfile="${logdir}version_activity.log"

## app parse
case $appid in
	'mex6') xapp="MEX6"; db="Main"; valid=1;;
	'locl') xapp="LOCL"; db="Main"; valid=1;;
	'patb') xapp="PATB"; db="Main"; valid=1;;
	'rfem') xapp="RFEM"; db="Main"; valid=1;;
	'rpla') xapp="RPLA"; db="Main"; valid=1;;
	'rplb') xapp="RPLB"; db="Main"; valid=1;;
	'rbs')  xapp="RBS";  db="Main"; valid=1;;
	'rplu')  xapp="RPLU";  db="Main"; valid=1;;
	'rplc')  xapp="RPLC";  db="Main"; valid=1;;
	'rbsc')  xapp="RBSC";  db="Main"; valid=1;;
	*)	valid=0;;
esac

## subs
log () {
	TIMESTAMP=`date '+%m/%d/%Y %H:%M:%S'`
	echo "${TIMESTAMP} ${PGMNAME} ${PID} $*" >>$logfile
}



fetch () {
	echo "fetching..$1"
ftp -n <<EOF
open 10.70.95.193
user essbase nardwdv1
cd /03fs03/essbase/rdwmr/export
get $1
EOF
}




makemsh () {

	app=$1
	mshfile="${app}_migrate.msh"
	echo generating $mshfile
	echo "/* autogenerated by migrate.sh `date` */" > $mshfile
	echo "login system manager on localhost;" >> $mshfile

	echo "alter database ${xapp}.Main reset;" >> $mshfile

	echo "logout; exit;" >> $mshfile

}


## MAIN

logfile="${logdir}migrate_activity.log"
clear

# MEX6 & RFIN & PATB & RPL & RBS
if [[ $valid -eq 1 ]]; then
	echo "migrate of $xapp initiated."
	log "migrate of $xapp initiated."
	update=1

	cd $expdir

	# get version file
	echo "fetching version file from DEV 193.."
	fetch ${appid}.ver


	# get new build number
	bnum=`head -1 ${appid}.ver`
	typeset -R3 x=$bnum   # right(3)
	ofspec="${appid}_build${x}_objects.tar"
	dfspec="${appid}_build${x}_data.tar"


	# get objects
	echo "fetching build ${x} object exports from DEV 193.."
	fetch ${ofspec}.zip

	echo "fetching build ${x} data exports from DEV 193.."
	fetch ${dfspec}.zip

	# expand objects & ver in appdir
	cp $ofspec.gz ${appdir}${xapp}/Main
	cp ${appid}.ver ${appdir}${xapp}
	cd ${appdir}${xapp}/Main

	echo unziping
	pkzipc -extract ${ofspec}.zip

	echo untarring
	tar -xf $ofspec

	ls
	rm $ofspec

	cd ${appdir}${xapp}
	ls -lR


	# restore from export files (touch code)
	cd ${scrdir}
	makemsh $appid

	echo "restoring to local app.."
	echo "${envid} ${xapp} Migration" > ${logdir}${appid}_migrate.log
	date >> ${logdir}${appid}_migrate.log
	${bindir}essmsh ${appid}_migrate.msh >> ${logdir}${appid}_migrate.log
	stats.sh $appid >> ${logdir}${appid}_migrate.log


	cd ${logdir}
	cat ${appid}_migrate.log | mailx -s "${envid} $xapp Migration" $recipients
	perl ${scrdir}arc.pl ${appid}_migrate.log


	cd ${expdir}
	ls -lR ${appid}*

fi



## migrate brings over objects from the Dev server.
#  it then touches the outline with a dummy change.

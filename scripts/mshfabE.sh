#!/bin/ksh
############################################################
#       File:       mshfabE.sh
#       Purpose:    Generate Errors Update Scripts
#
#       Version:
#       Parameters:
#       Created:
#       Author:   mbowen
#       Parameters:
#       User to run with: essbase
#
############################################################
# Regional DW Update
#
#
# 20030325.1000 - mbowen@mdcbowen.org
# for Nissan USA
#
#	modified 20030417.1730 by mbowen
#
############################################################
# mshfab is called exclusively by update.sh


## this version to run on any box

## init
# whereami
disk=`head -1 ~essbase/disk.dat`
envid=`head -1 ~essbase/env.dat`
TODAY=`date '+%m%d'`
appid=$1


errdir="/${disk}03/essbase/rdwmr/errlogs/"
logdir="/${disk}03/essbase/rdwmr/logs/"
expdir="/${disk}03/essbase/rdwmr/export/"
appdir="/${disk}01/vendors/essbase/app/"
scrdir="/${disk}03/essbase/rdwmr/scripts/"
inpdir="/${disk}03/essbase/rdwmr/input/"

rfin_companies="ana das ims nna nmac ncc ncfi nda nesci nmic nesco nmch nmex nmcic nmisc ntcna nmihc nca nci"
recipients='bowenm@nmc.nna, schwabj@nmc.nna, mcdougm@nmc.nna'



## app parse
case $appid in
	'rbs') errType="B"; xapp="RBS"; db="Main"; rule="'l_data6'";  brule="'b_acct'"; valid=1;;
	'rplu') apptype="rpl"; xapp="RPLU"; db="Main"; rule="'l_data6'";  brule="'b_fc_u'"; valid=0;;
	'rpla') apptype="rpl"; xapp="RPLA"; db="Main"; rule="'l_data6'";  brule="'b_fc_u'"; valid=0;;
	'rplb') apptype="rpl"; xapp="RPLB"; db="Main"; rule="'l_data6'";  brule="'b_fc_u'"; valid=0;;
	'rfem') errType="B"; xapp="RFEM"; db="Main"; rule="'l_data'";  brule="'b_acct'"; valid=1;;
	'patb') errType="A"; xapp="PATB"; db="Main"; rule="'l_data'"; brule="'b_acct'"; valid=1;;
	'locl') errType="B"; xapp="LOCL"; db="Main"; rule="'l_data9'"; brule="'b_accts9'"; valid=0;;
	*)	valid=0;;
esac


## SUBS
## start mshfile

echo mshfabE: fabricating essbase error update script..

## RFEM
if [[ $appid = 'rfem' ]]; then

	mshfile=${scrdir}rfem_errload.msh

	echo "/* autogenerated by mshfabE.sh `date` on $envid */" > $mshfile
	echo 'login system manager on localhost;' >> $mshfile


	# elim files
	erfile="'${errdir}${appid}_all_l_elim.err'"
	dfile=err${TODAY}.txt
	if [[ -a ${appdir}${xapp}/Main/$dfile ]]; then
		new=TRUE

		# mod outline data - product metadata
		brule="'b_prod'"
		erfile="'${errdir}${appid}_b_prod.err'"

		echo " " >> $mshfile
		echo "import database ${xapp}.${db} dimensions" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${brule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile

		# mod outline data - account metadata
		brule="'b_acct'"
		erfile="'${errdir}${appid}_b_acct.err'"

		echo " " >> $mshfile
		echo "import database ${xapp}.${db} dimensions" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${brule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile

		# load error data
		rule="'l_data'"
		erfile="'${errdir}${appid}_l_errdat.err'"

		echo " " >> $mshfile
		echo "import database ${xapp}.${db} data" >> $mshfile
		echo "from server text data_file '${efile}'" >> $mshfile
		echo "using server rules_file ${rule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile


	fi

	echo 'logout; exit;' >> $mshfile

fi

if [[ $appid = 'locl' ]]; then
	mshfile=${scrdir}${appid}_errload.msh
	echo "/* autogenerated by mshfabE.sh `date` on $envid */" > $mshfile
	echo 'login system manager on localhost;' >> $mshfile


	# regular
	dfile=err${TODAY}.txt
	if [[ -a ${appdir}${xapp}/Main/$dfile ]]; then

	# mod outline data - act9Co
		brule="'b_act9Co'"
		erfile="'${errdir}${appid}_b_acct9Co.err'"

		echo " " >> $mshfile
		echo "import database ${xapp}.${db} dimensions" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${brule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile

	# mod outline data - flip19
		brule="'b_flip19'"
		erfile="'${errdir}${appid}_b_acct9Co.err'"

		echo " " >> $mshfile
		echo "import database ${xapp}.${db} dimensions" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${brule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile

	# mod outline data - flip49
		brule="'b_flip49'"
		erfile="'${errdir}${appid}_b_flip49.err'"

		echo " " >> $mshfile
		echo "import database ${xapp}.${db} dimensions" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${brule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile

	# mod outline data - flip66
		brule="'b_flip66'"
		erfile="'${errdir}${appid}_b_flip66.err'"

		echo " " >> $mshfile
		echo "import database ${xapp}.${db} dimensions" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${brule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile


	# check for error file in essbase app subdir
		erfile="'${errdir}${appid}_l_errdat.err'"

		# load data
		echo " " >> $mshfile
		echo "import database ${xapp}.${db} data" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${rule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile
	fi


	echo 'logout; exit;' >> $mshfile


fi


if [[ $apptype = 'rpl' ]]; then
	mshfile=${scrdir}${appid}_errload.msh
	echo "/* autogenerated by mshfabE.sh `date` on $envid */" > $mshfile
	echo 'login system manager on localhost;' >> $mshfile


	# regular
	dfile=err${TODAY}.txt
	if [[ -a ${appdir}${xapp}/Main/$dfile ]]; then

	# mod outline data - b_fc_u (Model codes?)
		brule="'b_fc_u'"
		erfile="'${errdir}${appid}_b_fc_u.err'"

		echo " " >> $mshfile
		echo "import database ${xapp}.${db} dimensions" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${brule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile


	# check for error file in essbase app subdir
		erfile="'${errdir}${appid}_l_errdat.err'"

		# load data
		echo " " >> $mshfile
		echo "import database ${xapp}.${db} data" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${rule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile
	fi


	echo 'logout; exit;' >> $mshfile


fi



if [[ $valid -eq 1 ]]; then

	mshfile=${scrdir}${appid}_errload.msh
	echo "/* autogenerated by mshfabE.sh `date` on $envid */" > $mshfile
	echo 'login system manager on localhost;' >> $mshfile


	# regular
	dfile=err${TODAY}.txt
	if [[ -a ${appdir}${xapp}/Main/$dfile ]]; then

	# mod outline data
		erfile="'${errdir}${appid}_b_outline.err'"

		echo " " >> $mshfile
		echo "import database ${xapp}.${db} dimensions" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${brule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile

	# check for error file in essbase app subdir
		erfile="'${errdir}${appid}_l_errdat.err'"

		# load data
		echo " " >> $mshfile
		echo "import database ${xapp}.${db} data" >> $mshfile
		echo "from server text data_file '${dfile}'" >> $mshfile
		echo "using server rules_file ${rule}" >> $mshfile
		echo "on error write to ${erfile};" >> $mshfile
		echo " " >> $mshfile
	fi


	echo 'logout; exit;' >> $mshfile

fi


echo mshfabE: done.


### OLD CODE

# dimension build
		# mod outline data
#			echo " " >> $mshfile
#			echo "import database ${xapp}.${db} dimensions" >> $mshfile
#			echo "from server text data_file '${dfile}'" >> $mshfile
#			echo "using server rules_file ${brule}" >> $mshfile
#			echo "on error write to ${erfile1};" >> $mshfile
#			echo " " >> $mshfile
#	